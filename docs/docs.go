// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/activitys": {
            "get": {
                "description": "Get all activities with pagination, search, and sorting",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activitys"
                ],
                "summary": "Get all activities with pagination, search, and sorting",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "name",
                        "description": "Field to sort by",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "asc",
                        "description": "Sort order (asc or desc)",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by skill",
                        "name": "skill",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by activityState",
                        "name": "activityState",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by major",
                        "name": "major",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new activity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activitys"
                ],
                "summary": "Create a new activity",
                "parameters": [
                    {
                        "description": "Activity and ActivityItems",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ActivityDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Activity"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/activitys/{id}": {
            "get": {
                "description": "Get an activity by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activitys"
                ],
                "summary": "Get an activity by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Activity"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an activity",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activitys"
                ],
                "summary": "Update an activity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Activity object",
                        "name": "activity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ActivityDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ActivityDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an activity",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activitys"
                ],
                "summary": "Delete an activity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Activity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admins": {
            "get": {
                "description": "Get admins with pagination, search, and sorting",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admins"
                ],
                "summary": "Get admins with pagination, search, and sorting",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by name or email",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by field (default: name)",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "asc",
                        "description": "Sort order (asc or desc)",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admins"
                ],
                "summary": "Create a new admin",
                "parameters": [
                    {
                        "description": "Admin object",
                        "name": "admin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Admin"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Admin"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admins/{id}": {
            "get": {
                "description": "Get an admin by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admins"
                ],
                "summary": "Get an admin by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Admin"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admins"
                ],
                "summary": "Update an admin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Admin object",
                        "name": "admin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Admin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Admin"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an admin",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admins"
                ],
                "summary": "Delete an admin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Admin"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/foods": {
            "get": {
                "description": "ดึงข้อมูลอาหารที่มีอยู่ทั้งหมด",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "foods"
                ],
                "summary": "ดึงรายการอาหารทั้งหมด",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Food"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "สร้างข้อมูลอาหารเป็น array",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "foods"
                ],
                "summary": "เพิ่มข้อมูลอาหารหลายรายการ",
                "parameters": [
                    {
                        "description": "รายการอาหาร",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Food"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Food"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/foods/{id}": {
            "get": {
                "description": "ค้นหาข้อมูลอาหารโดยใช้ ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "foods"
                ],
                "summary": "ดึงข้อมูลอาหารตาม ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Food ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Food"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "อัปเดตข้อมูลอาหารที่มีอยู่",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "foods"
                ],
                "summary": "อัปเดตข้อมูลอาหาร",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Food ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ข้อมูลอาหารที่ต้องการอัปเดต",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Food"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "ลบข้อมูลอาหารออกจากระบบ",
                "tags": [
                    "foods"
                ],
                "summary": "ลบข้อมูลอาหาร",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Food ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Activity": {
            "type": "object",
            "properties": {
                "activityState": {
                    "type": "string",
                    "example": "planning"
                },
                "file": {
                    "type": "string",
                    "example": "image.jpg"
                },
                "id": {
                    "type": "string"
                },
                "majorIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "67bf0bd48873e448798fed34",
                        "67bf0bda8873e448798fed35"
                    ]
                },
                "name": {
                    "type": "string",
                    "example": "Football Tournament"
                },
                "skill": {
                    "type": "string",
                    "example": "hard"
                },
                "studentYears": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2,
                        3,
                        4
                    ]
                },
                "type": {
                    "type": "string",
                    "example": "one"
                }
            }
        },
        "models.ActivityDto": {
            "type": "object",
            "properties": {
                "activityItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ActivityItem"
                    }
                },
                "activityState": {
                    "type": "string",
                    "example": "planning"
                },
                "file": {
                    "type": "string",
                    "example": "image.jpg"
                },
                "id": {
                    "type": "string"
                },
                "majors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Major"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "Football Tournament"
                },
                "skill": {
                    "type": "string",
                    "example": "hard"
                },
                "studentYears": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2,
                        3,
                        4
                    ]
                },
                "type": {
                    "type": "string",
                    "example": "one"
                }
            }
        },
        "models.ActivityItem": {
            "type": "object",
            "required": [
                "hour",
                "maxParticipants"
            ],
            "properties": {
                "activityId": {
                    "type": "string"
                },
                "dates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Dates"
                    }
                },
                "description": {
                    "type": "string",
                    "example": "Quarter Final"
                },
                "hour": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 4
                },
                "id": {
                    "type": "string"
                },
                "maxParticipants": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 22
                },
                "name": {
                    "type": "string",
                    "example": "Quarter Final"
                },
                "operator": {
                    "type": "string",
                    "example": "Operator 1"
                },
                "room": {
                    "type": "string",
                    "example": "Stadium A"
                }
            }
        },
        "models.Admin": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.Dates": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "example": "2025-03-11"
                },
                "etime": {
                    "type": "string",
                    "example": "12:00"
                },
                "stime": {
                    "type": "string",
                    "example": "10:00"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "รายละเอียดของ Error",
                    "type": "string"
                },
                "status": {
                    "description": "HTTP Status Code",
                    "type": "integer"
                }
            }
        },
        "models.Food": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Major": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "majorName": {
                    "type": "string"
                }
            }
        },
        "models.SuccessResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
