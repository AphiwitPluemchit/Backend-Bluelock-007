definitions:
  models.Activity:
    properties:
      activityState:
        example: planning
        type: string
      id:
        type: string
      majorIds:
        example:
        - 67bf0bd48873e448798fed34
        - 67bf0bda8873e448798fed35
        items:
          type: string
        type: array
      name:
        example: Football Tournament
        type: string
      skill:
        example: hard
        type: string
      type:
        example: one
        type: string
    required:
    - activityState
    - majorIds
    - name
    - skill
    - type
    type: object
  models.ActivityDto:
    properties:
      activityItems:
        items:
          $ref: '#/definitions/models.ActivityItem'
        type: array
      activityState:
        example: planning
        type: string
      id:
        type: string
      majors:
        items:
          $ref: '#/definitions/models.Major'
        type: array
      name:
        example: Football Tournament
        type: string
      skill:
        example: hard
        type: string
      type:
        example: one
        type: string
    required:
    - activityState
    - majors
    - name
    - skill
    - type
    type: object
  models.ActivityItem:
    properties:
      activityId:
        type: string
      duration:
        example: 2
        minimum: 1
        type: integer
      endDate:
        example: "2025-03-11"
        type: string
      hour:
        example: 4
        minimum: 1
        type: integer
      id:
        type: string
      maxParticipants:
        example: 22
        minimum: 1
        type: integer
      name:
        example: Quarter Final
        type: string
      room:
        example: Stadium A
        type: string
      startDate:
        example: "2025-03-10"
        type: string
    required:
    - duration
    - endDate
    - hour
    - maxParticipants
    - name
    - room
    - startDate
    type: object
  models.Admin:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  models.ErrorResponse:
    properties:
      message:
        description: รายละเอียดของ Error
        type: string
      status:
        description: HTTP Status Code
        type: integer
    type: object
  models.Major:
    properties:
      id:
        type: string
      majorName:
        type: string
    type: object
info:
  contact: {}
paths:
  /activitys:
    get:
      description: Get all activities with pagination, search, and sorting
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: limit
        type: integer
      - description: Search term
        in: query
        name: search
        type: string
      - default: name
        description: Field to sort by
        in: query
        name: sortBy
        type: string
      - default: asc
        description: Sort order (asc or desc)
        in: query
        name: order
        type: string
      - description: Status of the activity
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all activities with pagination, search, and sorting
      tags:
      - activitys
    post:
      consumes:
      - application/json
      description: Create a new activity
      parameters:
      - description: Activity and ActivityItems
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.ActivityDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Activity'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new activity
      tags:
      - activitys
  /activitys/{id}:
    delete:
      description: Delete an activity
      parameters:
      - description: Activity ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete an activity
      tags:
      - activitys
    get:
      description: Get an activity by ID
      parameters:
      - description: Activity ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Activity'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get an activity by ID
      tags:
      - activitys
    put:
      description: Update an activity
      parameters:
      - description: Activity ID
        in: path
        name: id
        required: true
        type: string
      - description: Activity object
        in: body
        name: activity
        required: true
        schema:
          $ref: '#/definitions/models.ActivityDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ActivityDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update an activity
      tags:
      - activitys
  /admins:
    get:
      description: Get admins with pagination, search, and sorting
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: limit
        type: integer
      - description: Search by name or email
        in: query
        name: search
        type: string
      - description: 'Sort by field (default: name)'
        in: query
        name: sortBy
        type: string
      - default: asc
        description: Sort order (asc or desc)
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get admins with pagination, search, and sorting
      tags:
      - admins
    post:
      consumes:
      - application/json
      description: Create a new admin
      parameters:
      - description: Admin object
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/models.Admin'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Admin'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new admin
      tags:
      - admins
  /admins/{id}:
    delete:
      description: Delete an admin
      parameters:
      - description: Admin ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Admin'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete an admin
      tags:
      - admins
    get:
      description: Get an admin by ID
      parameters:
      - description: Admin ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Admin'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get an admin by ID
      tags:
      - admins
    put:
      consumes:
      - application/json
      description: Update an admin
      parameters:
      - description: Admin ID
        in: path
        name: id
        required: true
        type: string
      - description: Admin object
        in: body
        name: admin
        required: true
        schema:
          $ref: '#/definitions/models.Admin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Admin'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update an admin
      tags:
      - admins
swagger: "2.0"
