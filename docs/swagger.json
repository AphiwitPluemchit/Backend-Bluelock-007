{
    "swagger": "2.0",
    "info": {
        "description": "This is the API documentation for Bluelock project.",
        "title": "Bluelock API",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/admins": {
            "get": {
                "description": "Get admins with pagination, search, and sorting",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admins"
                ],
                "summary": "Get admins with pagination, search, and sorting",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by name or email",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by field (default: name)",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "asc",
                        "description": "Sort order (asc or desc)",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admins"
                ],
                "summary": "Create a new admin",
                "parameters": [
                    {
                        "description": "Admin object",
                        "name": "admin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Admin"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Admin"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admins/{id}": {
            "get": {
                "description": "Get an admin by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admins"
                ],
                "summary": "Get an admin by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Admin"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admins"
                ],
                "summary": "Update an admin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Admin object",
                        "name": "admin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Admin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Admin"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an admin",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admins"
                ],
                "summary": "Delete an admin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Admin"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/google": {
            "get": {
                "description": "Start Google OAuth authentication flow and return authorization URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Initiate Google OAuth login",
                "responses": {
                    "200": {
                        "description": "OAuth URL generated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/google/callback": {
            "get": {
                "description": "Process Google OAuth callback, authenticate user, and redirect with token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Handle Google OAuth callback",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization code from Google",
                        "name": "code",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "State parameter for security",
                        "name": "state",
                        "in": "query"
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirect to frontend with error"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Authenticate user with email and password, includes rate limiting and security measures",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "loginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful with token and user info",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid format or missing credentials",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid credentials",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "429": {
                        "description": "Too many requests - rate limited",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error - token generation failed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Logout user by blacklisting token and updating session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout user",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get current user profile information from JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get user profile",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to fetch profile",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Get new access token using refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh access token",
                "parameters": [
                    {
                        "description": "Refresh Token",
                        "name": "refreshToken",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New access token generated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Invalid or expired refresh token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/certificates": {
            "get": {
                "description": "Get Certificates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "certificates"
                ],
                "summary": "Get Certificates",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by field",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "studentId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "courseId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/certificates/url-verify": {
            "get": {
                "description": "Verify a URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "certificates"
                ],
                "summary": "Verify a URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "URL to verify example: https://learner.thaimooc.ac.th/credential-wallet/10793bb5-6e4f-4873-9309-f25f216a46c7/sahaphap.rit/public",
                        "name": "url",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Student ID example: 685abc586c4acf57c7e2f104 (สหภาพ)",
                        "name": "studentId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Course ID example: ThaiMooc: 6890a889ebc423e6aeb5605a or BuuMooc: 68b5c6b7e30cd42f34959a5e (การออกแบบและนำเสนอ)",
                        "name": "courseId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/courses": {
            "get": {
                "description": "Get all courses with pagination and filtering options",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Get all courses with pagination and filtering",
                "parameters": [
                    {
                        "type": "string",
                        "name": "lastId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 10,
                        "description": "จำนวนรายการต่อหน้า",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "desc",
                        "description": "ทิศทางการเรียง (asc/desc)",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "หมายเลขหน้าที่ต้องการ",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "",
                        "description": "คำค้นหา (Optional)",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "_id",
                        "description": "ฟิลด์ที่ใช้เรียงลำดับ",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "isActive",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "isHardSkill",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lms, buumooc, thaimooc",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CoursePaginatedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new course",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Create a new course",
                "parameters": [
                    {
                        "description": "Course object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Course"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Course"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/courses/{id}": {
            "get": {
                "description": "Get a course by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Get a course by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Course"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a course",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Update a course",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Course object",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Course"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Course"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a course",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Delete a course",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/foods": {
            "get": {
                "description": "ดึงข้อมูลอาหารที่มีอยู่ทั้งหมด",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "foods"
                ],
                "summary": "ดึงรายการอาหารทั้งหมด",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Food"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "สร้างข้อมูลอาหาร 1 รายการ",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "foods"
                ],
                "summary": "เพิ่มข้อมูลอาหาร",
                "parameters": [
                    {
                        "description": "ข้อมูลอาหาร",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Food"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Food"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/foods/{id}": {
            "get": {
                "description": "ค้นหาข้อมูลอาหารโดยใช้ ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "foods"
                ],
                "summary": "ดึงข้อมูลอาหารตาม ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Food ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Food"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "อัปเดตข้อมูลอาหารที่มีอยู่",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "foods"
                ],
                "summary": "อัปเดตข้อมูลอาหาร",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Food ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ข้อมูลอาหารที่ต้องการอัปเดต",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Food"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "ลบข้อมูลอาหารออกจากระบบ",
                "tags": [
                    "foods"
                ],
                "summary": "ลบข้อมูลอาหาร",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Food ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/forms": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "ดึงข้อมูลฟอร์มทั้งหมด",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "forms"
                ],
                "summary": "Get all forms",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Form"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "รับข้อมูลฟอร์มจาก client และบันทึกลงฐานข้อมูล",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "forms"
                ],
                "summary": "Create a new form",
                "parameters": [
                    {
                        "description": "Form object",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Form"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Form created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to insert form",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/forms/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "ดึงข้อมูลฟอร์มตามรหัส",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "forms"
                ],
                "summary": "Get form by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Form ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Form"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "ลบฟอร์มตาม ObjectID",
                "tags": [
                    "forms"
                ],
                "summary": "Delete a form by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Form ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Form deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Form not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to delete form",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "อัปเดตข้อมูลฟอร์มตามรหัส",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "forms"
                ],
                "summary": "Update a form",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Form ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Form object",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Form"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/programs": {
            "get": {
                "description": "Get all programs with pagination, search, and sorting",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "programs"
                ],
                "summary": "Get all programs with pagination, search, and sorting",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "name",
                        "description": "Field to sort by",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "asc",
                        "description": "Sort order (asc or desc)",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by skill",
                        "name": "skills",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by programState",
                        "name": "programStates",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by major",
                        "name": "majors",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by studentYear",
                        "name": "studentYears",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new program",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "programs"
                ],
                "summary": "Create a new program",
                "parameters": [
                    {
                        "description": "Program and ProgramItems",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProgramDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Program"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/programs/calendar/{month}/{year}": {
            "get": {
                "description": "Get all program calendar",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "programs"
                ],
                "summary": "Get all program calendar",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Month",
                        "name": "month",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Year",
                        "name": "year",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ProgramDto"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/programs/{id}": {
            "get": {
                "description": "Get an program by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "programs"
                ],
                "summary": "Get an program by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Program ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Program"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an program",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "programs"
                ],
                "summary": "Update an program",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Program ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Program object",
                        "name": "program",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Program"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Program"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an program",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "programs"
                ],
                "summary": "Delete an program",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Program ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/programs/{id}/enrollment-summary": {
            "get": {
                "description": "Get enrollment summary by program ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "programs"
                ],
                "summary": "Get enrollment summary by program ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Program ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.EnrollmentSummary"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/programs/{id}/image": {
            "post": {
                "description": "Upload an image for an program",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "programs"
                ],
                "summary": "Upload an image for an program",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Program ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "File name",
                        "name": "filename",
                        "in": "query"
                    },
                    {
                        "type": "file",
                        "description": "Image file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an image for an program",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "programs"
                ],
                "summary": "Delete an image for an program",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Program ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "File name",
                        "name": "filename",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/students": {
            "get": {
                "description": "Get all students with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "Get students",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search keyword",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by field",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order (asc/desc)",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Student status (comma separated)",
                        "name": "studentStatus",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Major (comma separated)",
                        "name": "major",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Student year (comma separated)",
                        "name": "studentYear",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Create one or more students",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "Create students",
                "parameters": [
                    {
                        "description": "List of students to create",
                        "name": "students",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Student"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/students/{code}": {
            "get": {
                "description": "Get a student by their code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "Get student by code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Student"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/students/{id}": {
            "put": {
                "description": "Update a student's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "Update student",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Student data",
                        "name": "student",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Student"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a student by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "Delete student",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.Admin": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Block": {
            "type": "object",
            "properties": {
                "choices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Choice"
                    }
                },
                "description": {
                    "type": "string"
                },
                "formId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isRequired": {
                    "type": "boolean"
                },
                "rows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Row"
                    }
                },
                "sequence": {
                    "type": "integer"
                },
                "session": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.Choice": {
            "type": "object",
            "properties": {
                "blockId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "sequence": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.Course": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Learn the basics of programming with this introductory course"
                },
                "hour": {
                    "type": "integer",
                    "example": 4
                },
                "id": {
                    "type": "string",
                    "example": "507f1f77bcf86cd799439011"
                },
                "isActive": {
                    "type": "boolean",
                    "example": true
                },
                "isHardSkill": {
                    "description": "true = hard skill, false = soft skill",
                    "type": "boolean",
                    "example": true
                },
                "issuer": {
                    "type": "string",
                    "example": "Computer Science Department"
                },
                "link": {
                    "type": "string",
                    "example": "https://www.example.com/course"
                },
                "name": {
                    "type": "string",
                    "example": "Introduction to Programming"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "lms",
                        "buumooc",
                        "thaimooc"
                    ],
                    "example": "lms"
                }
            }
        },
        "models.CoursePaginatedResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Course"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/models.PaginationMeta"
                }
            }
        },
        "models.Dates": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "example": "2025-03-11"
                },
                "etime": {
                    "type": "string",
                    "example": "12:00"
                },
                "stime": {
                    "type": "string",
                    "example": "10:00"
                }
            }
        },
        "models.EnrollmentSummary": {
            "type": "object",
            "properties": {
                "maxParticipants": {
                    "type": "integer"
                },
                "programItemSums": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProgramItemSum"
                    }
                },
                "remainingSlots": {
                    "type": "integer"
                },
                "totalRegistered": {
                    "type": "integer"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "รายละเอียดของ Error",
                    "type": "string"
                },
                "status": {
                    "description": "HTTP Status Code",
                    "type": "integer"
                }
            }
        },
        "models.Food": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.FoodVote": {
            "type": "object",
            "properties": {
                "foodName": {
                    "type": "string",
                    "example": "Pizza"
                },
                "vote": {
                    "type": "integer"
                }
            }
        },
        "models.Form": {
            "type": "object",
            "properties": {
                "blocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Block"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isOrigin": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.MajorEnrollment": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "majorName": {
                    "type": "string"
                }
            }
        },
        "models.PaginationMeta": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "totalPages": {
                    "type": "integer"
                }
            }
        },
        "models.Program": {
            "type": "object",
            "properties": {
                "endDateEnroll": {
                    "type": "string"
                },
                "file": {
                    "type": "string",
                    "example": "image.jpg"
                },
                "foodVotes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.FoodVote"
                    }
                },
                "formId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "example": "Football Tournament"
                },
                "programState": {
                    "type": "string",
                    "example": "planning"
                },
                "skill": {
                    "type": "string",
                    "example": "hard"
                },
                "type": {
                    "type": "string",
                    "example": "one"
                }
            }
        },
        "models.ProgramDto": {
            "type": "object",
            "properties": {
                "endDateEnroll": {
                    "type": "string"
                },
                "file": {
                    "type": "string",
                    "example": "image.jpg"
                },
                "foodVotes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.FoodVote"
                    }
                },
                "formId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "example": "Football Tournament"
                },
                "programItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProgramItemDto"
                    }
                },
                "programState": {
                    "type": "string",
                    "example": "planning"
                },
                "skill": {
                    "type": "string",
                    "example": "hard"
                },
                "type": {
                    "type": "string",
                    "example": "one"
                }
            }
        },
        "models.ProgramItemDto": {
            "type": "object",
            "properties": {
                "dates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Dates"
                    }
                },
                "description": {
                    "type": "string",
                    "example": "Quarter Final"
                },
                "enrollmentCount": {
                    "type": "integer"
                },
                "hour": {
                    "type": "integer",
                    "example": 4
                },
                "id": {
                    "type": "string"
                },
                "majors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "CS",
                        "SE",
                        "ITDI",
                        "AAI"
                    ]
                },
                "maxParticipants": {
                    "type": "integer",
                    "example": 22
                },
                "name": {
                    "type": "string",
                    "example": "Quarter Final"
                },
                "operator": {
                    "type": "string",
                    "example": "Operator 1"
                },
                "programId": {
                    "type": "string"
                },
                "rooms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Room 1",
                        "Room 2"
                    ]
                },
                "studentYears": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2,
                        3,
                        4
                    ]
                }
            }
        },
        "models.ProgramItemSum": {
            "type": "object",
            "properties": {
                "programItemName": {
                    "type": "string"
                },
                "registeredByMajor": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MajorEnrollment"
                    }
                }
            }
        },
        "models.Row": {
            "type": "object",
            "properties": {
                "blockId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "sequence": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.Student": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "engName": {
                    "type": "string"
                },
                "hardSkill": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "major": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "softSkill": {
                    "type": "integer"
                },
                "status": {
                    "description": "0พ้นสภาพ 1ชั่วโมงน้อยมาก 2ชั่วโมงน้อย 3ชั่วโมงครบแล้ว 4ออกผึกแล้ว",
                    "type": "integer"
                }
            }
        },
        "models.SuccessResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        }
    }
}