services:
  # Redis service for caching and message queuing
  redis:
    image: redis:7
    container_name: bluelock-redis
    volumes:
      - redis-data:/data
    restart: always
    ports:
      - "6379:6379"
    networks:
      - bluelock-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    environment:
      - TZ=Asia/Bangkok

  # Asynqmon for task queue monitoring
  asynqmon:
    image: hibiken/asynqmon
    container_name: bluelock-asynqmon
    ports:
      - "8080:8080"
    environment:
      - REDIS_ADDR=redis:6379
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - bluelock-net

  # Golang backend service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bluelock-backend
    ports:
      - "8888:8888"
    volumes:
      - ./uploads:/app/uploads
      - ./.env:/app/.env
    environment:
      - MONGO_URI=mongodb+srv://BluelockDB:BluelockDB@cluster0.m60i72z.mongodb.net/
      - REDIS_URI=redis:6379
      - APP_URI=8888
      - TZ=Asia/Bangkok
      - ALLOWED_ORIGINS=*
    restart: always
    networks:
      - bluelock-net
    depends_on:
      redis:
        condition: service_healthy

  # OCR service with FastAPI
  ocr:
    build:
      context: ./ocr
      dockerfile: Dockerfile
    container_name: bluelock-ocr
    ports:
      - "8000:8000"
    volumes:
      - ./uploads:/app/uploads
    restart: always
    networks:
      - bluelock-net

  # Nginx as reverse proxy
  # nginx:
  #   image: nginx:1.25
  #   container_name: bluelock-nginx
  #   ports:
  #     - "8080:80"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./nginx/conf.d:/etc/nginx/conf.d:ro
  #     - ./uploads:/var/www/uploads:ro
  #   restart: always
  #   networks:
  #     - bluelock-net
  #   depends_on:
  #     - backend
  #     - ocr
  #     - asynqmon
  #     - redis

networks:
  bluelock-net:
    driver: bridge

volumes:
  redis-data:
